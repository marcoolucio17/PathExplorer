:root {
  --container-height: 70vh;
  --container-padding: 2rem;
  --min-content-width: 320px;
}

/* Main container */
.dashboardContainer {
  background: transparent;
  color: var(--text-light);
  height: 100vh;
  min-height: 600px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--container-padding);
}

/* Content container matches EmpleadoProyectoPage */
.dashboardContent {
  display: flex;
  flex-direction: column;
  max-width: 1200px;
  width: 100%;
  height: var(--container-height);
  min-height: 500px;
  overflow: hidden;
  position: relative;
}

/* Search header with search and sort options */
.searchHeader {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

/* Search input container */
.searchContainer {
  position: relative;
  width: 250px;
  min-height: 42px; /* Fixed height to prevent layout shift */
  display: flex;
  align-items: center;
}

.searchContainer i {
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-muted-darker);
  opacity: 0.9;
  pointer-events: none;
  font-size: 0.95rem;
  z-index: 2;
}

.searchInput {
  width: 100%;
  height: 42px;
  padding: 0 10px 0 35px;
  border: 1px solid transparent; /* Pre-allocate border space */
  border-radius: 8px;
  background: var(--glass-bg);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  color: var(--text-main);
  font-size: 0.9rem;
  font-family: 'Graphik Light', sans-serif;
  box-shadow: inset 0 1px 2px var(--highlight-inner-faint);
  transition: box-shadow 0.2s ease, border-color 0.2s ease;
  position: relative;
}

.searchInput:focus {
  outline: none;
  border-color: var(--text-light);
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.192);
}

/* Sort options container */
.sortContainer {
  display: flex;
  align-items: center;
  gap: 15px;
}

.sortLabel {
  font-size: 0.9rem;
  color: #FFFFFF;
  opacity: 0.5;
  margin: 0;
}

/* Button styles */
.filterButton {
  padding: 8px 25px;
  border-radius: 50px;
  border: 1px solid var(--border-light);
  cursor: pointer;
  font-weight: 500;
  font-size: 0.9rem;
  font-family: 'Graphik Medium', sans-serif;
  color: var(--text-light);
  text-shadow: var(--shadow-text);
  transition: all 0.2s ease;
  position: relative;
  display: flex;
  align-items: center;
  gap: 8px;
}

.createButton {
  padding: 8px 25px;
  border-radius: 50px;
  border: 1px solid var(--border-light);
  cursor: pointer;
  font-weight: 500;
  font-size: 0.9rem;
  font-family: 'Graphik Medium', sans-serif;
  color: black;
  text-shadow: var(--shadow-text);
  transition: all 0.2s ease;
  position: relative;
  display: flex;
  align-items: center;
  gap: 8px;
}

.skillsButton {
  background: var(--purple-btn-secondary);
  border-color: var(--border-medium);
  box-shadow: inset 0 1px 1px var(--highlight-inner-faint), var(--shadow-outer-medium);
}

.compabilityButton {
  background: linear-gradient(135deg, var(--purple-btn-primary-1), var(--purple-btn-primary-2));
  border-color: var(--border-strong);
  box-shadow: inset 0 1px 1px var(--highlight-inner-strong), var(--shadow-glow-primary);
}

.activeButton {
  transform: scale(0.98);
  filter: brightness(1.1);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 0 8px rgba(139, 92, 246, 0.5);
}

.filterButton:hover {
  transform: scale(1.02);
  filter: brightness(1.15);
}

.filterButton:active {
  transform: scale(0.98);
  filter: brightness(0.9);
}

.createButton:hover {
  transform: scale(1.02);
  filter: brightness(1.15);
}

.createButton:active {
  transform: scale(0.98);
  filter: brightness(0.9);
}

/* View toggle button */
.viewToggleButton {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: var(--glass-bg);
  border: 1px solid var(--border-light);
  color: var(--text-light);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  margin-left: 5px;
}

.viewToggleButton i {
  font-size: 1.1rem;
}

.viewToggleButton:hover {
  background: rgba(255, 255, 255, 0.15);
  transform: translateY(-2px);
}

.viewToggleButton.gridActive {
  background: rgba(139, 92, 246, 0.3);
  border-color: rgba(139, 92, 246, 0.5);
}

.viewToggleButton.listActive {
  background: rgba(74, 158, 204, 0.3);
  border-color: rgba(74, 158, 204, 0.5);
}

/* Filter badge */
.filterBadge {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 600;
  margin-left: 5px;
}

/* Active filters display */
.activeFiltersContainer {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
  padding: 10px 15px;
  margin-bottom: 15px;
  animation: fadeDown 0.3s ease;
}

@keyframes fadeDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.activeFiltersHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
}

.activeFiltersTitle {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  font-weight: 500;
}

.clearAllButton {
  background: transparent;
  border: none;
  color: var(--purple-btn-primary-1);
  font-size: 0.8rem;
  padding: 3px 6px;
  cursor: pointer;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.clearAllButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: var(--purple-btn-primary-2);
}

.activeFiltersList {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.activeFilterChip {
  background: rgba(74, 158, 204, 0.2);
  border: 1px solid rgba(74, 158, 204, 0.5);
  border-radius: 50px;
  padding: 4px 12px 4px 15px;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  gap: 8px;
}

.removeFilterButton {
  background: transparent;
  border: none;
  color: rgba(255, 255, 255, 0.6);
  cursor: pointer;
  padding: 0;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.removeFilterButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 1);
}

.removeFilterButton i {
  font-size: 0.8rem;
}

/* Projects container */
.projectsContainer {
  flex: 1;
  overflow: hidden;
  position: relative;
}

/* Project grid layout */
.projectsGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  padding: 5px 15px 5px 5px;
  will-change: transform, opacity;
  opacity: 1;
  transition: opacity 0.25s ease;
}

/* Project list layout */
.projectsList {
  display: flex;
  flex-direction: column;
  gap: 15px;
  padding: 5px 15px 5px 5px;
  will-change: transform, opacity;
  opacity: 1;
  transition: opacity 0.25s ease;
}

/* No projects message */
.noProjectsMessage {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: rgba(255, 255, 255, 0.6);
  padding: 2rem;
}

.noProjectsMessage p {
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
}

.clearFiltersButton {
  background: linear-gradient(135deg, var(--purple-btn-primary-1), var(--purple-btn-primary-2));
  border: 1px solid var(--border-strong);
  border-radius: 50px;
  padding: 10px 20px;
  color: white;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: inset 0 1px 1px var(--highlight-inner-strong), var(--shadow-glow-primary);
}

.clearFiltersButton:hover {
  transform: translateY(-2px);
  filter: brightness(1.1);
  box-shadow: inset 0 1px 1px var(--highlight-inner-strong), var(--shadow-glow-primary-hover);
}

/* Project card animation states */
.projectCard.loading,
.projectListItem.loading {
  opacity: 0;
  transform: translateY(20px) scale(0.95);
}

.projectCard.loaded,
.projectListItem.loaded {
  opacity: 1;
  transform: translateY(0) scale(1);
  transition: 
    opacity 0.4s ease var(--stagger-delay), 
    transform 0.45s cubic-bezier(0.2, 0.8, 0.2, 1) var(--stagger-delay);
}

/* Project card styling (grid view) */
.projectCard {
  background: var(--glass-bg);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  box-shadow: var(--shadow-card);
  padding: 20px;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 15px;
  height: 100%;
  min-height: 240px;
  transform-origin: center bottom;
  will-change: transform, opacity, box-shadow;
}

.projectCard:hover {
  transform: translateY(-5px) scale(1.01);
  box-shadow: var(--shadow-card-hover);
  transition: 
    transform 0.25s cubic-bezier(0.2, 0.8, 0.2, 1),
    box-shadow 0.25s ease;
}

/* Project list item styling (list view) */
.projectListItem {
  background: var(--glass-bg);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  box-shadow: var(--shadow-card);
  padding: 20px;
  position: relative;
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-template-areas: 
    "header header compatibility"
    "role role role"
    "skills participants participants";
  gap: 15px;
  transform-origin: center;
  will-change: transform, opacity, box-shadow;
}

.projectListItem:hover {
  transform: translateY(-3px) scale(1.005);
  box-shadow: var(--shadow-card-hover);
  transition: 
    transform 0.25s cubic-bezier(0.2, 0.8, 0.2, 1),
    box-shadow 0.25s ease;
}

.projectListItem .projectHeader {
  grid-area: header;
}

.projectListItem .projectRole {
  grid-area: role;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding-top: 12px;
}

.projectListItem .projectFooter {
  grid-area: skills;
  margin-top: 0;
  padding-top: 8px;
}

.projectListItem .projectParticipants {
  grid-area: participants;
  justify-content: flex-end;
  margin-top: 8px;
}

.projectListItem .compatibilityCircle {
  grid-area: compatibility;
  position: static;
  justify-self: end;
  align-self: start;
}

/* Compatibility circle positioning */
.compatibilityCircle {
  position: absolute;
  top: -15px;
  right: -15px;
  z-index: 10;
  animation: popIn 0.5s cubic-bezier(0.2, 0.8, 0.2, 1.2) forwards;
  transform: scale(0.6);
  opacity: 0;
}

@keyframes popIn {
  from { 
    opacity: 0; 
    transform: scale(0.6); 
  }
  50% {
    transform: scale(0.9);
  }
  to { 
    opacity: 1; 
    transform: scale(0.8); 
  }
}

/* Project header with logo and title */
.projectHeader {
  display: flex;
  align-items: center;
  gap: 12px;
}

.projectLogo {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  object-fit: cover;
  flex-shrink: 0;
}

.projectInfo {
  flex: 1;
  min-width: 0;
}

.projectTitle {
  font-size: 1.2rem;
  font-weight: 600;
  margin: 0;
  color: var(--text-main);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: 'Graphik Medium', sans-serif;
}

.projectClient {
  font-size: 0.9rem;
  margin: 4px 0 0;
  color: var(--text-light);
  opacity: 0.8;
  font-family: 'Graphik Light', sans-serif;
}

/* Role information */
.projectRole {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.roleName {
  font-size: 1rem;
  font-weight: 600;
  margin: 0;
  color: var(--text-main);
  font-family: 'Graphik Medium', sans-serif;
}

.roleDescription {
  font-size: 0.8rem;
  margin: 0;
  color: var(--text-light);
  opacity: 0.8;
  font-family: 'Graphik Light', sans-serif;
}

/* Project footer section */
.projectFooter {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.projectSkills {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  max-width: 65%;
}

.skillTag {
  background: linear-gradient(135deg, var(--purple-btn-primary-1), var(--purple-btn-primary-2));
  border: 1px solid var(--border-strong);
  border-radius: 50px;
  padding: 4px 10px;
  font-size: 0.7rem;
  color: var(--text-light);
  white-space: nowrap;
  transition: all 0.2s ease;
}

/* Highlighted skill when it matches a filter */
.highlightedSkill {
  background: linear-gradient(135deg, rgba(74, 158, 204, 0.8), rgba(139, 92, 246, 0.8));
  border-color: rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  transform: scale(1.1);
  font-weight: 600;
  animation: glow 1.5s infinite alternate;
}

@keyframes glow {
  from {
    box-shadow: 0 0 5px rgba(139, 92, 246, 0.5);
  }
  to {
    box-shadow: 0 0 15px rgba(139, 92, 246, 0.8);
  }
}

.projectParticipants {
  display: flex;
  align-items: center;
}

.participantAvatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 2px solid var(--purple-progress-1);
  margin-left: -10px;
  object-fit: cover;
}

.participantAvatar:first-child {
  margin-left: 0;
}

/* Responsive styles */
@media (max-width: 1200px) {
  .projectsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .searchHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 15px;
  }
  
  .searchContainer {
    width: 100%;
  }
  
  .sortContainer {
    width: 100%;
    justify-content: space-between;
  }
  
  .projectsGrid {
    grid-template-columns: 1fr;
  }
  
  .projectListItem {
    grid-template-columns: 1fr;
    grid-template-areas: 
      "header"
      "compatibility"
      "role" 
      "skills"
      "participants";
  }
  
  .projectListItem .projectHeader {
    flex-direction: column;
    align-items: flex-start;
    text-align: center;
  }
  
  .projectListItem .compatibilityCircle {
    justify-self: center;
    margin: 10px 0;
  }
}